This repo is based on the default and example hooks the git project provides.
Also I added a few of my own hooks. Have a look at the Overview at the bottom.

server side hooks:
    post-/pre-receive
    update

client side hooks:
    all the others

non-executable files:
    scripts used by hooks

To activate the hooks, use something like this in your repos config file:

[hook]
    warnInvalidXML = false
    blockInvalidXML = false
    warnInvalidPHPSyntax = false
    blockInvalidPHPSyntax = false
    publishHomeRepo = false
    deployOnTag = false
    deployOnPush = false
    sendEmail = false

Overview:
    
    warnInvalidXML
        Depends: xmllint
        Description: Gives warning on push if there is some invalid xml

    blockInvalidXML
        Depends: xmllint
        Description: forbid push if there is some invalid xml 
    
    warnInvalidPHPSyntax
        Depends: php-cli
        Description: Gives warning on push if there are syntax errors in php 
                     code in files with *.php* or *.phtml extension.

    blockInvalidPHPSyntax
        Depends: php-cli
        Description: Forbid push if there are syntax errors in php code in 
                     files with *.php* or *.phtml extension.

    publishHomeRepo:
        Description: specific script to export a cleaned version of my home repo.
                     maybe usable as example.

    deployOnTag:
        Depends: python-fabric
        Description: deploys to configured hosts on a pushed tag

    deployOnPush:
        Depends: python-fabric
        Description: deploy to configured hosts on push

    sendEmail:
        Example script, I just added the switch for.
        For doc, have a look at the post-receive_email scipt.
        It's well commented.


